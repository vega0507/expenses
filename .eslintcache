[{"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\index.js":"1","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\App.js":"2","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\theme.js":"3","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\principal\\Dashboard.js":"4","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Detalle.js":"5","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\AgregarGasto.js":"6","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ListaGastos.js":"7","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico.js":"8","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico2.js":"9","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\Estilos.js":"10","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\index.js":"11","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\gastosReducer.js":"12","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\index.js":"13","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\types.js":"14","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminMain.js":"15","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\Add.js":"16","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminTable.js":"17","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\expenseTypeReducer.js":"18","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ExpenseSummary.js":"19","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\extras\\Dashboard2.js":"20"},{"size":1277,"mtime":1612920643381,"results":"21","hashOfConfig":"22"},{"size":140,"mtime":1612310478082,"results":"23","hashOfConfig":"22"},{"size":2066,"mtime":1612918798735,"results":"24","hashOfConfig":"22"},{"size":3694,"mtime":1612370574712,"results":"25","hashOfConfig":"22"},{"size":1792,"mtime":1612920893032,"results":"26","hashOfConfig":"22"},{"size":3853,"mtime":1612921937934,"results":"27","hashOfConfig":"22"},{"size":3232,"mtime":1612920285455,"results":"28","hashOfConfig":"22"},{"size":1028,"mtime":1611602707336,"results":"29","hashOfConfig":"22"},{"size":3788,"mtime":1612921852471,"results":"30","hashOfConfig":"22"},{"size":1257,"mtime":1612922026140,"results":"31","hashOfConfig":"22"},{"size":509,"mtime":1612199970182,"results":"32","hashOfConfig":"22"},{"size":2118,"mtime":1612227292121,"results":"33","hashOfConfig":"22"},{"size":959,"mtime":1612224423730,"results":"34","hashOfConfig":"22"},{"size":372,"mtime":1612216425100,"results":"35","hashOfConfig":"22"},{"size":696,"mtime":1612315286174,"results":"36","hashOfConfig":"22"},{"size":2940,"mtime":1612312248429,"results":"37","hashOfConfig":"22"},{"size":1761,"mtime":1612315401246,"results":"38","hashOfConfig":"22"},{"size":724,"mtime":1612224057457,"results":"39","hashOfConfig":"22"},{"size":2336,"mtime":1612921932246,"results":"40","hashOfConfig":"22"},{"size":5258,"mtime":1612288903379,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hai8qy",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\index.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\App.js",[],["95","96"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\theme.js",["97","98"],"import {createMuiTheme} from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      \r\n      type:'light',\r\n      primary: {\r\n        main: green[900],//grey[900],        \r\n        contrastText: '#fff',\r\n      },\r\n      secondary: {\r\n        main: purple[400],    \r\n        contrastText: '#fff',\r\n      },\r\n      alternateTextColor: green[500],\r\n      action:{\r\n        hover: green[100],    \r\n      },\r\n      divider: green[500],\r\n      /*text: {\r\n        primary: pink[900]\r\n      },*/\r\n    },\r\n    \r\n    typography: {\r\n      fontFamily:'Roboto',\r\n      fontSize: 14,\r\n    },\r\n    shape: {\r\n      borderRadius: 1,\r\n    },\r\n    background: {\r\n      paper: pink[900],   \r\n      //default: '#aaaaaa',\r\n      default: '#CCCCFF',\r\n    },\r\n    //revisar este : \r\n    overrides: {      \r\n      /*MuiInput: {\r\n        root: {\r\n          color: 'white',\r\n          \r\n        }\r\n      },*/\r\n      MuiPaper:{        \r\n        root : {\r\n          //backgroundColor: indigo[900], //'linear-gradient(70deg, rgba(95,120,247,1) 4%, rgba(137,136,232,0.8883928571428571) 41%)', //green[50],   \r\n          //background: 'linear-gradient(70deg, rgba(95,120,247,1) 10%, rgba(26,35,126,1) 41%)',\r\n        },        \r\n      },    \r\n      /*MuiCard:{        \r\n        root: {\r\n                   \r\n          /* glass*\r\n          color: '#FFFFFF', //'#000000', //color del texto \r\n          borderRadius: '18px', //curva de las tarjetas\r\n          padding: '5px',  //espacio de los bordes a la tarjeta\r\n          background: 'rgba( 255, 255, 255, 0.2 )',      \r\n          border: 'solid 1px rgba(255,255,255,0.3)',\r\n          backgroudClip: 'padding-box',//'padding-box',\r\n          backdropFilter: 'blur(40px)'\r\n    \r\n        }          \r\n      },  */   \r\n    },\r\n  });\r\n\r\n  export default theme;","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\principal\\Dashboard.js",["99"],"import React, { useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Rutas \r\nimport { Link  } from 'react-router-dom';\r\nimport { seleccionarCategoria, \r\n    loadExpensesListFromStorage, \r\n    loadExpensesTypesFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {\r\n      //maxWidth: 800,\r\n      width: \"200px\",      \r\n      height:\"200px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      color: theme.palette.primary.main,\r\n      /* glass*/\r\n      //color: '#FFFFFF', //'#000000', //color del texto \r\n      borderRadius: '18px', //curva de las tarjetas\r\n      padding: '5px',  //espacio de los bordes a la tarjeta\r\n      background: 'rgba( 255, 255, 255, 0.2 )',      \r\n      border: 'solid 1px rgba(255,255,255,0.3)',\r\n      backgroudClip: 'padding-box',//'padding-box',\r\n      backdropFilter: 'blur(40px)'\r\n\r\n    }    \r\n}));\r\n\r\nconst Dashboard = (props) =>{\r\n    const classes = useStyles();\r\n    \r\n    useEffect(()=>{          \r\n        //loading expenses types      \r\n        props.loadExpensesTypesFromStorage();\r\n\r\n        //loading expenses conf         \r\n        props.loadExpensesListFromStorage();\r\n        \r\n    },[]);\r\n\r\n    const onClick = (selectedCard) =>{        \r\n        localStorage.setItem('selectedCard', JSON.stringify(selectedCard));        \r\n        props.seleccionarCategoria(selectedCard);\r\n    }\r\n\r\n    return (  \r\n        <Grid container spacing={2}>\r\n            <Grid item xs={1}/>\r\n            <Grid item xs={10}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={3}>\r\n                        <CardActionArea component={Link} to=\"/admin\">\r\n                            <Card key=\"0\" className={classes.root} \r\n                                onClick={()=> onClick('Admin')} >   \r\n                                <CardHeader\r\n                                    component=\"div\"\r\n                                    title=\"Admin\" style={{color: 'white'}}\r\n                                />      \r\n                            </Card>\r\n                        </CardActionArea>                        \r\n                    </Grid>\r\n                    {\r\n                        props.expensesTypesList.map((punto, index) =>(\r\n                        <Grid item xs={6} sm={3}>\r\n                        <CardActionArea component={Link} to=\"/detalle\">\r\n                            <Card key={index} className={classes.root} \r\n                                onClick={()=> onClick(punto)} > \r\n                                <CardHeader\r\n                                    component=\"div\"\r\n                                    title={punto.expenseType} style={{color: 'white'}}\r\n                                />      \r\n                            </Card>\r\n                        </CardActionArea>                        \r\n                        </Grid>\r\n                    \r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}/>\r\n        </Grid> \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{   \r\n    return { \r\n      //reducers       \r\n      expensesTypesList: state.expenseTypeReducer,\r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    //actions\r\n    seleccionarCategoria,\r\n    loadExpensesTypesFromStorage,\r\n    loadExpensesListFromStorage\r\n  })(Dashboard); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Detalle.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\AgregarGasto.js",["100","101"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ListaGastos.js",["102","103","104","105","106","107"],"import React, {useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { seleccionarCategoria, loadExpensesListFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport useStyles from '../../theme/Estilos';\r\nimport Card from '@material-ui/core/Card';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n/*const useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 450,\r\n    //boxShadow: '5px 10px 8px 10px #888888',\r\n  },\r\n  header:{\r\n    color: theme.palette.common.white,//color del texto\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n}));*/\r\n\r\nfunction BasicTable(props) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  \r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  var rubro = props.selectedExpense.expenseType;  \r\n   \r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Card style={{height: '560px', width: \"725px\"}}>\r\n    <TableContainer style={{height:'560px', overflow: 'auto'}}>\r\n      <Table aria-label=\"simple table\" >\r\n        <TableHead>\r\n          <TableRow >\r\n            <TableCell className={classes.tableHeader}>Gasto</TableCell>\r\n            <TableCell className={classes.tableHeader}>Monto</TableCell>\r\n            <TableCell className={classes.tableHeader}>%</TableCell>            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody > \r\n          { props.gastos[rubro] !== undefined && \r\n            props.gastos[rubro] !==null  ? props.gastos[rubro].map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell className={classes.tableCell} >\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell} >{row.name}</TableCell>\r\n              <TableCell className={classes.tableCell} >{row.value}</TableCell>              \r\n            </TableRow>\r\n          )) : \"No data to display\" }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <TablePagination\r\n          rowsPerPageOptions={[10]}\r\n          component=\"div\"\r\n          count={10}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </Card>\r\n  );\r\n}\r\nconst mapStateToProps = (state) =>{   \r\n  return { \r\n    //reducers \r\n    selectedExpense: state.gastosReducer.categoriaSeleccionada,\r\n    gastos: state.gastosReducer.gastos\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  //actions\r\n  seleccionarCategoria//,\r\n  //loadExpensesListFromStorage \r\n   \r\n})(BasicTable); ","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico.js",["108","109"],"import {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,BarChart,Bar\r\n  } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      \"name\": \"Page A\",\r\n      \"uv\": 4000,\r\n      \"pv\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Page B\",\r\n      \"uv\": 3000,\r\n      \"pv\": 1398\r\n    },\r\n    {\r\n      \"name\": \"Page C\",\r\n      \"uv\": 2000,\r\n      \"pv\": 9800\r\n    },\r\n    {\r\n      \"name\": \"Page D\",\r\n      \"uv\": 2780,\r\n      \"pv\": 3908\r\n    },\r\n    {\r\n      \"name\": \"Page E\",\r\n      \"uv\": 1890,\r\n      \"pv\": 4800\r\n    },\r\n    {\r\n      \"name\": \"Page F\",\r\n      \"uv\": 2390,\r\n      \"pv\": 3800\r\n    },\r\n    {\r\n      \"name\": \"Page G\",\r\n      \"uv\": 3490,\r\n      \"pv\": 4300\r\n    }\r\n  ]\r\n    \r\nconst Grafico = () =>{\r\n  return <BarChart width={730} height={250} data={data}>\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n  </BarChart>\r\n  }             \r\n  \r\n  export default Grafico;",["110","111"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico2.js",["112","113"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\Estilos.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\index.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\gastosReducer.js",["114","115","116"],"import {\r\n    AGREGAR_GASTO,\r\n    SELECCIONAR_CATEGORIA,\r\n    GET_EXPENSES_LIST_FROM_STORAGE\r\n}from '../actions/types'; \r\n\r\n\r\nexport default (state = { gastos: {}, categoriaSeleccionada: ''} , action) =>{  \r\n    switch(action.type){\r\n\r\n        case SELECCIONAR_CATEGORIA:                \r\n            return {...state, categoriaSeleccionada: action.payload }; \r\n\r\n        case AGREGAR_GASTO:  \r\n            //a la categoria seleccionada se le debe agregar el nuevo gasto\r\n            var listaGastosRubro = [];            \r\n            var gastos = {};\r\n            var spend = 0;\r\n            if(state.gastos === undefined){ \r\n                listaGastosRubro.push(action.payload);                \r\n                gastos = {[state.categoriaSeleccionada.expenseType]: listaGastosRubro};\r\n               \r\n            }else{\r\n                //ya hay gastos pero no de la categoria seleccionada \r\n                if(state.gastos === null || state.gastos[state.categoriaSeleccionada.expenseType] === undefined){\r\n                    \r\n                    listaGastosRubro.push(action.payload);  \r\n                    gastos = {...state.gastos, [state.categoriaSeleccionada.expenseType]: listaGastosRubro };\r\n                    \r\n                }else{\r\n                    listaGastosRubro = state.gastos[state.categoriaSeleccionada.expenseType];\r\n                    listaGastosRubro.push(action.payload);                \r\n                    gastos = {[state.categoriaSeleccionada.expenseType]: listaGastosRubro};\r\n\r\n                }      \r\n               \r\n\r\n            }localStorage.setItem(\"expensesList\", JSON.stringify(gastos)); \r\n            return {...state, gastos : gastos };\r\n\r\n        /*case CARGAR_GASTOS:                \r\n            return {...state, gastos: action.payload }; \r\n*/\r\n        case GET_EXPENSES_LIST_FROM_STORAGE:\r\n            var gastos = JSON.parse(localStorage.getItem(\"expensesList\"));  \r\n            if(gastos === null){ \r\n                gastos = {};\r\n            }              \r\n            return {...state, gastos} ; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\index.js",["117"],"import {\r\n    ADD_EXPENSE_TYPE,\r\n    GET_EXPENSES_TYPES_FROM_STORAGE,\r\n    AGREGAR_GASTO,\r\n    CARGAR_GASTOS,\r\n    SELECCIONAR_CATEGORIA,\r\n    GET_EXPENSES_LIST_FROM_STORAGE\r\n}from './types'; \r\n\r\nexport const addExpenseType = (expense) => {     \r\n    return { \r\n        type: ADD_EXPENSE_TYPE, \r\n        payload: expense \r\n    };\r\n};\r\n\r\nexport const loadExpensesTypesFromStorage = (expenses) => {\r\n    return { \r\n        type: GET_EXPENSES_TYPES_FROM_STORAGE, \r\n        payload: expenses \r\n    };\r\n};\r\n\r\n\r\nexport const agregarGasto = (gasto) => {     \r\n    return { \r\n        type: AGREGAR_GASTO, \r\n        payload: gasto \r\n    };\r\n};\r\n\r\nexport const seleccionarCategoria = (categoria) => {         \r\n    return { \r\n        type: SELECCIONAR_CATEGORIA, \r\n        payload: categoria \r\n    };\r\n};\r\n\r\nexport const loadExpensesListFromStorage = (expenses) => {\r\n    return { \r\n        type: GET_EXPENSES_LIST_FROM_STORAGE, \r\n        payload: expenses \r\n    };\r\n};","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\types.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminMain.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\Add.js",["118"],"import { useState, useEffect} from 'react'; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { addExpenseType } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Add = (props) =>{\r\n  const [expense,setExpense] = useState({expenseType: '', expenseBudget: '' });\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  \r\n  const add = () =>{    \r\n    if(expense.expenseType === '' || expense.expenseBudget === ''){\r\n      setOpenAlert(true);\r\n      setAlertMessage('You should add a expense type'); \r\n    }else{\r\n      var expenseType = props.expensesTypeList\r\n        .filter(ex => ex.expenseType.toUpperCase() === expense.expenseType.toUpperCase());\r\n    \r\n      if(expenseType.length > 0){\r\n        setOpenAlert(true);\r\n        setAlertMessage(`Expense type ${expense.expenseType} already exists `);\r\n      }else{\r\n        props.addExpenseType(expense);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n  \r\n  \r\n\r\n    return(\r\n        <Grid container  spacing={1}>\r\n        <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"expenseType\"\r\n              label=\"Expense Type\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              type=\"string\"\r\n              value={expense.expenseType}\r\n              onChange={(event)=> setExpense({...expense, expenseType: event.target.value})}\r\n            />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n            <TextField\r\n              id=\"budget\"\r\n              label=\"Budget\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              type=\"number\"              \r\n              value={expense.expenseBudget}\r\n              onChange={(event)=> setExpense({...expense,expenseBudget: event.target.value})}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={add} >\r\n              Add \r\n            </Button>\r\n            <Snackbar open={openAlert} autoHideDuration={6000} \r\n              anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              onClose={handleClose}>\r\n              <Alert                 \r\n                onClose={handleClose} severity=\"error\" variant=\"filled\" >\r\n                {alertMessage}\r\n              </Alert>\r\n            </Snackbar>           \r\n        </Grid>\r\n        <Grid item xs={12}><br/><br/></Grid>\r\n    </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{   \r\n  return { \r\n    //reducers \r\n    expensesTypeList: state.expenseTypeReducer, \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  //actions\r\n  addExpenseType  \r\n   \r\n})(Add); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminTable.js",["119","120"],"import React, {useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Card from '@material-ui/core/Card';\r\nimport useStyles from '../../theme/Estilos';\r\n\r\nimport { loadExpensesTypesFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst AdminTable = (props) =>{\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{               \r\n      props.loadExpensesTypesFromStorage();\r\n      \r\n    },[]); \r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead >\r\n          <TableRow >\r\n            <TableCell className={classes.tableHeader}>Expense Type</TableCell>\r\n            <TableCell className={classes.tableHeader}>Expense Budget</TableCell>                       \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>  \r\n          {props.expensesTypesList.map((row,index) => (\r\n            <TableRow key={index}>\r\n              <TableCell  className={classes.tableCell} >{row.expenseType}</TableCell>\r\n            <TableCell className={classes.tableCell}>{row.expenseBudget}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    );\r\n};\r\nconst mapStateToProps = (state) =>{   \r\n    return { \r\n      //reducers \r\n      expensesTypesList: state.expenseTypeReducer,\r\n      \r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    //actions  \r\n    loadExpensesTypesFromStorage  \r\n  })(AdminTable); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\expenseTypeReducer.js",["121"],"import {\r\n    ADD_EXPENSE_TYPE,\r\n    GET_EXPENSES_TYPES_FROM_STORAGE\r\n}from '../actions/types'; \r\n\r\n\r\nexport default (state = [] , action) =>{ \r\n    switch(action.type){\r\n\r\n        case ADD_EXPENSE_TYPE: \r\n            var newState = [...state,  action.payload] ;\r\n            localStorage.setItem(\"expensesTypeList\", JSON.stringify(newState));               \r\n            return newState;      \r\n\r\n        case GET_EXPENSES_TYPES_FROM_STORAGE: \r\n            var expenses = JSON.parse(localStorage.getItem(\"expensesTypeList\"));  \r\n            if(expenses === null){ \r\n                expenses = [];\r\n            }                \r\n            return expenses ;        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ExpenseSummary.js",["122","123","124","125"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\extras\\Dashboard2.js",["126"],"import React, { useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Rutas \r\nimport { Link  } from 'react-router-dom';\r\n\r\nimport { seleccionarCategoria, loadExpensesListFromStorage, loadExpensesTypesFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {\r\n      //maxWidth: 800,\r\n      width: \"200px\",      \r\n      height:\"200px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      \r\n      /* glass*/\r\n      color: '#FFFFFF', //'#000000', //color del texto \r\n      borderRadius: '18px', //curva de las tarjetas\r\n      padding: '5px',  //espacio de los bordes a la tarjeta\r\n      background: 'rgba( 255, 255, 255, 0.2 )',      \r\n      border: 'solid 1px rgba(255,255,255,0.3)',\r\n      backgroudClip: 'padding-box',//'padding-box',\r\n      backdropFilter: 'blur(40px)'\r\n\r\n    },\r\n    paper: {\r\n        width: '100%' ,\r\n        height: '100%',\r\n        //overflow: 'auto',\r\n        background: theme.palette.primary.light\r\n        //'#C9CEFC',//color moradito\r\n      },\r\n}));\r\n\r\nconst Dashboard = (props) =>{\r\n    const classes = useStyles();\r\n    \r\n    useEffect(()=>{          \r\n        //loading expenses types      \r\n        props.loadExpensesTypesFromStorage();\r\n\r\n        //loading expenses conf         \r\n        props.loadExpensesListFromStorage();\r\n        \r\n    },[]);\r\n\r\n    const onClick = (selectedCard) =>{        \r\n        localStorage.setItem('selectedCard', JSON.stringify(selectedCard));        \r\n        props.seleccionarCategoria(selectedCard);\r\n    }\r\n\r\n    return (       \r\n        <Paper  className={classes.paper}>\r\n            <br/><br/>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={8}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        \r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={3}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}/>\r\n        </Grid> \r\n        </Paper>        \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{   \r\n    return { \r\n      //reducers       \r\n      expensesTypesList: state.expenseTypeReducer,\r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    //actions\r\n    seleccionarCategoria,\r\n    loadExpensesTypesFromStorage,\r\n    loadExpensesListFromStorage\r\n  })(Dashboard); \r\n",["127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":12},{"ruleId":"133","severity":1,"message":"137","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":46,"column":7,"nodeType":"140","endLine":46,"endColumn":9,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"142","line":1,"column":20,"nodeType":"135","messageId":"136","endLine":1,"endColumn":29},{"ruleId":"133","severity":1,"message":"143","line":8,"column":24,"nodeType":"135","messageId":"136","endLine":8,"endColumn":51},{"ruleId":"133","severity":1,"message":"142","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"144","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"145","line":9,"column":8,"nodeType":"135","messageId":"136","endLine":9,"endColumn":13},{"ruleId":"133","severity":1,"message":"143","line":10,"column":32,"nodeType":"135","messageId":"136","endLine":10,"endColumn":59},{"ruleId":"133","severity":1,"message":"146","line":28,"column":10,"nodeType":"135","messageId":"136","endLine":28,"endColumn":14},{"ruleId":"133","severity":1,"message":"147","line":28,"column":16,"nodeType":"135","messageId":"136","endLine":28,"endColumn":23},{"ruleId":"133","severity":1,"message":"148","line":2,"column":5,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"149","line":2,"column":16,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"129","replacedBy":"150"},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","severity":1,"message":"152","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":30},{"ruleId":"133","severity":1,"message":"153","line":64,"column":10,"nodeType":"135","messageId":"136","endLine":64,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":8,"column":1,"nodeType":"156","endLine":53,"endColumn":2},{"ruleId":"133","severity":1,"message":"157","line":18,"column":17,"nodeType":"135","messageId":"136","endLine":18,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":45,"column":17,"nodeType":"135","messageId":"160","endLine":45,"endColumn":23},{"ruleId":"133","severity":1,"message":"161","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":18},{"ruleId":"133","severity":1,"message":"142","line":1,"column":20,"nodeType":"135","messageId":"136","endLine":1,"endColumn":29},{"ruleId":"133","severity":1,"message":"162","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":12},{"ruleId":"138","severity":1,"message":"139","line":21,"column":7,"nodeType":"140","endLine":21,"endColumn":9,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"155","line":7,"column":1,"nodeType":"156","endLine":25,"endColumn":2},{"ruleId":"133","severity":1,"message":"164","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":30},{"ruleId":"133","severity":1,"message":"165","line":8,"column":32,"nodeType":"135","messageId":"136","endLine":8,"endColumn":44},{"ruleId":"133","severity":1,"message":"166","line":8,"column":46,"nodeType":"135","messageId":"136","endLine":8,"endColumn":69},{"ruleId":"138","severity":1,"message":"167","line":28,"column":5,"nodeType":"140","endLine":28,"endColumn":19,"suggestions":"168"},{"ruleId":"138","severity":1,"message":"139","line":54,"column":7,"nodeType":"140","endLine":54,"endColumn":9,"suggestions":"169"},{"ruleId":"129","replacedBy":"170"},{"ruleId":"131","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'grey' is defined but never used.","Identifier","unusedVar","'indigo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["174"],"'useEffect' is defined but never used.","'loadExpensesListFromStorage' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.",["172"],["173"],"'PureComponent' is defined but never used.","'jsfiddleUrl' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'spend' is assigned a value but never used.","no-redeclare","'gastos' is already defined.","redeclared","'CARGAR_GASTOS' is defined but never used.","'Card' is defined but never used.",["175"],"'seleccionarCategoria' is defined but never used.","'cargarGastos' is defined but never used.","'loadExpensesFromStorage' is defined but never used.","React Hook useEffect has missing dependencies: 'props.selectedExpense.expenseBudget' and 'props.selectedExpense.expenseType'. Either include them or remove the dependency array.",["176"],["177"],["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"181","fix":"182"},{"desc":"178","fix":"183"},"Update the dependencies array to be: [props]",{"range":"184","text":"185"},{"range":"186","text":"185"},"Update the dependencies array to be: [props.gastos, props.selectedExpense.expenseBudget, props.selectedExpense.expenseType]",{"range":"187","text":"188"},{"range":"189","text":"185"},[1491,1493],"[props]",[728,730],[1085,1099],"[props.gastos, props.selectedExpense.expenseBudget, props.selectedExpense.expenseType]",[1680,1682]]