[{"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\index.js":"1","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\App.js":"2","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\theme.js":"3","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\principal\\Dashboard.js":"4","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Detalle.js":"5","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\AgregarGasto.js":"6","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ListaGastos.js":"7","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico.js":"8","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico2.js":"9","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\Estilos.js":"10","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\index.js":"11","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\gastosReducer.js":"12","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\index.js":"13","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\types.js":"14","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminMain.js":"15","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\Add.js":"16","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminTable.js":"17","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\expenseTypeReducer.js":"18","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ExpenseSummary.js":"19","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\extras\\Dashboard2.js":"20"},{"size":1192,"mtime":1612324291081,"results":"21","hashOfConfig":"22"},{"size":140,"mtime":1612310478082,"results":"23","hashOfConfig":"22"},{"size":2044,"mtime":1612372379881,"results":"24","hashOfConfig":"22"},{"size":3694,"mtime":1612370574712,"results":"25","hashOfConfig":"22"},{"size":2066,"mtime":1612371014695,"results":"26","hashOfConfig":"22"},{"size":3528,"mtime":1612370749377,"results":"27","hashOfConfig":"22"},{"size":2742,"mtime":1612370442236,"results":"28","hashOfConfig":"22"},{"size":1028,"mtime":1611602707336,"results":"29","hashOfConfig":"22"},{"size":3712,"mtime":1612322104821,"results":"30","hashOfConfig":"22"},{"size":1424,"mtime":1612370398834,"results":"31","hashOfConfig":"22"},{"size":509,"mtime":1612199970182,"results":"32","hashOfConfig":"22"},{"size":2118,"mtime":1612227292121,"results":"33","hashOfConfig":"22"},{"size":959,"mtime":1612224423730,"results":"34","hashOfConfig":"22"},{"size":372,"mtime":1612216425100,"results":"35","hashOfConfig":"22"},{"size":696,"mtime":1612315286174,"results":"36","hashOfConfig":"22"},{"size":2940,"mtime":1612312248429,"results":"37","hashOfConfig":"22"},{"size":1761,"mtime":1612315401246,"results":"38","hashOfConfig":"22"},{"size":724,"mtime":1612224057457,"results":"39","hashOfConfig":"22"},{"size":2276,"mtime":1612370711047,"results":"40","hashOfConfig":"22"},{"size":5258,"mtime":1612288903379,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1hai8qy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\index.js",[],["93","94"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\App.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\theme.js",["95"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\principal\\Dashboard.js",["96"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Detalle.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\AgregarGasto.js",["97","98"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ListaGastos.js",["99","100","101","102","103","104"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico.js",["105","106"],"import {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,BarChart,Bar\r\n  } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      \"name\": \"Page A\",\r\n      \"uv\": 4000,\r\n      \"pv\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Page B\",\r\n      \"uv\": 3000,\r\n      \"pv\": 1398\r\n    },\r\n    {\r\n      \"name\": \"Page C\",\r\n      \"uv\": 2000,\r\n      \"pv\": 9800\r\n    },\r\n    {\r\n      \"name\": \"Page D\",\r\n      \"uv\": 2780,\r\n      \"pv\": 3908\r\n    },\r\n    {\r\n      \"name\": \"Page E\",\r\n      \"uv\": 1890,\r\n      \"pv\": 4800\r\n    },\r\n    {\r\n      \"name\": \"Page F\",\r\n      \"uv\": 2390,\r\n      \"pv\": 3800\r\n    },\r\n    {\r\n      \"name\": \"Page G\",\r\n      \"uv\": 3490,\r\n      \"pv\": 4300\r\n    }\r\n  ]\r\n    \r\nconst Grafico = () =>{\r\n  return <BarChart width={730} height={250} data={data}>\r\n    <CartesianGrid strokeDasharray=\"3 3\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n    <Legend />\r\n    <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n    <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n  </BarChart>\r\n  }             \r\n  \r\n  export default Grafico;",["107","108"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\Grafico2.js",["109","110"],"import React, { PureComponent } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {\r\n  PieChart, Pie, Cell,Tooltip\r\n} from 'recharts';\r\nimport { seleccionarCategoria, loadExpensesListFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport useStyles from '../../theme/Estilos';\r\n\r\n\r\nconst COLORS = ['#66ffcc', '#1ab2ff', '#2db300', '#0080ff'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n}) => {\r\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\n\r\n  const getIntroOfPage = (label) => {\r\n    if (label === 'Group A') {\r\n      return \"Page A is about men's clothing\";\r\n    } if (label === 'Group B') {\r\n      return \"Page B is about women's dress\";\r\n    } if (label === 'Group C') {\r\n      return \"Page C is about women's bag\";\r\n    } if (label === 'Group D') {\r\n      return 'Page D is about household goods';\r\n    } if (label === 'Group E') {\r\n      return 'Page E is about food';\r\n    } if (label === 'Group F') {\r\n      return 'Page F is about baby food';\r\n    }\r\n  };\r\n  \r\n  const CustomTooltip = ({ active, payload, label }) => { \r\n  \r\n    if (active) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`${payload[0].name} : ${payload[0].value}`}</p>\r\n          <p className=\"intro\">{getIntroOfPage(label)}</p>\r\n          <p className=\"desc\">Anything you want can be displayed here. {label}</p>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  };\r\n\r\n//export default class Example extends PureComponent {\r\nconst Example = (props) =>{\r\n  const  jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n  const classes = useStyles();\r\n  const expenseTypeSelected = props.selectedExpense.expenseType;\r\n  \r\n  \r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader className={classes.cardHeader}\r\n        title={`Expenses summary in  ${expenseTypeSelected}`}\r\n      />     \r\n      <CardContent>\r\n        <PieChart width={475} height={225}>                  \r\n          <Pie\r\n            data={ props.gastos !== null && props.gastos[expenseTypeSelected] !== undefined \r\n                    && props.gastos[expenseTypeSelected] !==null ? \r\n                    props.gastos[expenseTypeSelected] : []\r\n                  }\r\n            cx={250}\r\n            cy={100}\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={100}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {props.gastos !== null && props.gastos[expenseTypeSelected] !== undefined && \r\n            props.gastos[expenseTypeSelected] !==null  && \r\n            props.gastos[expenseTypeSelected].map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n            }\r\n          </Pie>\r\n          <Tooltip content={<CustomTooltip />}/>\r\n        </PieChart>\r\n      </CardContent>\r\n    </Card>\r\n    );\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) =>{   \r\n  return { \r\n    //reducers \r\n    selectedExpense: state.gastosReducer.categoriaSeleccionada,\r\n    gastos: state.gastosReducer.gastos\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  //actions\r\n  seleccionarCategoria,\r\n  loadExpensesListFromStorage \r\n   \r\n})(Example); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\theme\\Estilos.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\index.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\gastosReducer.js",["111","112","113"],"import {\r\n    AGREGAR_GASTO,\r\n    SELECCIONAR_CATEGORIA,\r\n    GET_EXPENSES_LIST_FROM_STORAGE\r\n}from '../actions/types'; \r\n\r\n\r\nexport default (state = { gastos: {}, categoriaSeleccionada: ''} , action) =>{  \r\n    switch(action.type){\r\n\r\n        case SELECCIONAR_CATEGORIA:                \r\n            return {...state, categoriaSeleccionada: action.payload }; \r\n\r\n        case AGREGAR_GASTO:  \r\n            //a la categoria seleccionada se le debe agregar el nuevo gasto\r\n            var listaGastosRubro = [];            \r\n            var gastos = {};\r\n            var spend = 0;\r\n            if(state.gastos === undefined){ \r\n                listaGastosRubro.push(action.payload);                \r\n                gastos = {[state.categoriaSeleccionada.expenseType]: listaGastosRubro};\r\n               \r\n            }else{\r\n                //ya hay gastos pero no de la categoria seleccionada \r\n                if(state.gastos === null || state.gastos[state.categoriaSeleccionada.expenseType] === undefined){\r\n                    \r\n                    listaGastosRubro.push(action.payload);  \r\n                    gastos = {...state.gastos, [state.categoriaSeleccionada.expenseType]: listaGastosRubro };\r\n                    \r\n                }else{\r\n                    listaGastosRubro = state.gastos[state.categoriaSeleccionada.expenseType];\r\n                    listaGastosRubro.push(action.payload);                \r\n                    gastos = {[state.categoriaSeleccionada.expenseType]: listaGastosRubro};\r\n\r\n                }      \r\n               \r\n\r\n            }localStorage.setItem(\"expensesList\", JSON.stringify(gastos)); \r\n            return {...state, gastos : gastos };\r\n\r\n        /*case CARGAR_GASTOS:                \r\n            return {...state, gastos: action.payload }; \r\n*/\r\n        case GET_EXPENSES_LIST_FROM_STORAGE:\r\n            var gastos = JSON.parse(localStorage.getItem(\"expensesList\"));  \r\n            if(gastos === null){ \r\n                gastos = {};\r\n            }              \r\n            return {...state, gastos} ; \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\index.js",["114"],"import {\r\n    ADD_EXPENSE_TYPE,\r\n    GET_EXPENSES_TYPES_FROM_STORAGE,\r\n    AGREGAR_GASTO,\r\n    CARGAR_GASTOS,\r\n    SELECCIONAR_CATEGORIA,\r\n    GET_EXPENSES_LIST_FROM_STORAGE\r\n}from './types'; \r\n\r\nexport const addExpenseType = (expense) => {     \r\n    return { \r\n        type: ADD_EXPENSE_TYPE, \r\n        payload: expense \r\n    };\r\n};\r\n\r\nexport const loadExpensesTypesFromStorage = (expenses) => {\r\n    return { \r\n        type: GET_EXPENSES_TYPES_FROM_STORAGE, \r\n        payload: expenses \r\n    };\r\n};\r\n\r\n\r\nexport const agregarGasto = (gasto) => {     \r\n    return { \r\n        type: AGREGAR_GASTO, \r\n        payload: gasto \r\n    };\r\n};\r\n\r\nexport const seleccionarCategoria = (categoria) => {         \r\n    return { \r\n        type: SELECCIONAR_CATEGORIA, \r\n        payload: categoria \r\n    };\r\n};\r\n\r\nexport const loadExpensesListFromStorage = (expenses) => {\r\n    return { \r\n        type: GET_EXPENSES_LIST_FROM_STORAGE, \r\n        payload: expenses \r\n    };\r\n};","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\actions\\types.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminMain.js",[],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\Add.js",["115"],"import { useState, useEffect} from 'react'; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { addExpenseType } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Add = (props) =>{\r\n  const [expense,setExpense] = useState({expenseType: '', expenseBudget: '' });\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  \r\n  const add = () =>{    \r\n    if(expense.expenseType === '' || expense.expenseBudget === ''){\r\n      setOpenAlert(true);\r\n      setAlertMessage('You should add a expense type'); \r\n    }else{\r\n      var expenseType = props.expensesTypeList\r\n        .filter(ex => ex.expenseType.toUpperCase() === expense.expenseType.toUpperCase());\r\n    \r\n      if(expenseType.length > 0){\r\n        setOpenAlert(true);\r\n        setAlertMessage(`Expense type ${expense.expenseType} already exists `);\r\n      }else{\r\n        props.addExpenseType(expense);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n  \r\n  \r\n\r\n    return(\r\n        <Grid container  spacing={1}>\r\n        <Grid item xs={12} sm={3}>\r\n            <TextField\r\n              id=\"expenseType\"\r\n              label=\"Expense Type\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              type=\"string\"\r\n              value={expense.expenseType}\r\n              onChange={(event)=> setExpense({...expense, expenseType: event.target.value})}\r\n            />\r\n        </Grid>\r\n        <Grid item  xs={12} sm={3}>\r\n            <TextField\r\n              id=\"budget\"\r\n              label=\"Budget\"\r\n              size=\"small\"\r\n              margin=\"dense\"\r\n              type=\"number\"              \r\n              value={expense.expenseBudget}\r\n              onChange={(event)=> setExpense({...expense,expenseBudget: event.target.value})}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={add} >\r\n              Add \r\n            </Button>\r\n            <Snackbar open={openAlert} autoHideDuration={6000} \r\n              anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n              onClose={handleClose}>\r\n              <Alert                 \r\n                onClose={handleClose} severity=\"error\" variant=\"filled\" >\r\n                {alertMessage}\r\n              </Alert>\r\n            </Snackbar>           \r\n        </Grid>\r\n        <Grid item xs={12}><br/><br/></Grid>\r\n    </Grid>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{   \r\n  return { \r\n    //reducers \r\n    expensesTypeList: state.expenseTypeReducer, \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  //actions\r\n  addExpenseType  \r\n   \r\n})(Add); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\Admin\\AdminTable.js",["116","117"],"import React, {useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Card from '@material-ui/core/Card';\r\nimport useStyles from '../../theme/Estilos';\r\n\r\nimport { loadExpensesTypesFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst AdminTable = (props) =>{\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{               \r\n      props.loadExpensesTypesFromStorage();\r\n      \r\n    },[]); \r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead >\r\n          <TableRow >\r\n            <TableCell className={classes.tableHeader}>Expense Type</TableCell>\r\n            <TableCell className={classes.tableHeader}>Expense Budget</TableCell>                       \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>  \r\n          {props.expensesTypesList.map((row,index) => (\r\n            <TableRow key={index}>\r\n              <TableCell  className={classes.tableCell} >{row.expenseType}</TableCell>\r\n            <TableCell className={classes.tableCell}>{row.expenseBudget}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    );\r\n};\r\nconst mapStateToProps = (state) =>{   \r\n    return { \r\n      //reducers \r\n      expensesTypesList: state.expenseTypeReducer,\r\n      \r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    //actions  \r\n    loadExpensesTypesFromStorage  \r\n  })(AdminTable); \r\n","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\reducers\\expenseTypeReducer.js",["118"],"import {\r\n    ADD_EXPENSE_TYPE,\r\n    GET_EXPENSES_TYPES_FROM_STORAGE\r\n}from '../actions/types'; \r\n\r\n\r\nexport default (state = [] , action) =>{ \r\n    switch(action.type){\r\n\r\n        case ADD_EXPENSE_TYPE: \r\n            var newState = [...state,  action.payload] ;\r\n            localStorage.setItem(\"expensesTypeList\", JSON.stringify(newState));               \r\n            return newState;      \r\n\r\n        case GET_EXPENSES_TYPES_FROM_STORAGE: \r\n            var expenses = JSON.parse(localStorage.getItem(\"expensesTypeList\"));  \r\n            if(expenses === null){ \r\n                expenses = [];\r\n            }                \r\n            return expenses ;        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\detalle\\ExpenseSummary.js",["119","120","121","122"],"C:\\Users\\viole\\Documents\\viole\\REACT\\gastos\\src\\components\\extras\\Dashboard2.js",["123"],"import React, { useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Rutas \r\nimport { Link  } from 'react-router-dom';\r\n\r\nimport { seleccionarCategoria, loadExpensesListFromStorage, loadExpensesTypesFromStorage } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    root: {\r\n      //maxWidth: 800,\r\n      width: \"200px\",      \r\n      height:\"200px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      \r\n      /* glass*/\r\n      color: '#FFFFFF', //'#000000', //color del texto \r\n      borderRadius: '18px', //curva de las tarjetas\r\n      padding: '5px',  //espacio de los bordes a la tarjeta\r\n      background: 'rgba( 255, 255, 255, 0.2 )',      \r\n      border: 'solid 1px rgba(255,255,255,0.3)',\r\n      backgroudClip: 'padding-box',//'padding-box',\r\n      backdropFilter: 'blur(40px)'\r\n\r\n    },\r\n    paper: {\r\n        width: '100%' ,\r\n        height: '100%',\r\n        //overflow: 'auto',\r\n        background: theme.palette.primary.light\r\n        //'#C9CEFC',//color moradito\r\n      },\r\n}));\r\n\r\nconst Dashboard = (props) =>{\r\n    const classes = useStyles();\r\n    \r\n    useEffect(()=>{          \r\n        //loading expenses types      \r\n        props.loadExpensesTypesFromStorage();\r\n\r\n        //loading expenses conf         \r\n        props.loadExpensesListFromStorage();\r\n        \r\n    },[]);\r\n\r\n    const onClick = (selectedCard) =>{        \r\n        localStorage.setItem('selectedCard', JSON.stringify(selectedCard));        \r\n        props.seleccionarCategoria(selectedCard);\r\n    }\r\n\r\n    return (       \r\n        <Paper  className={classes.paper}>\r\n            <br/><br/>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}/>\r\n                <Grid item xs={8}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                        \r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={3}>\r\n                            <CardActionArea component={Link} to=\"/admin\">\r\n                                <Card key=\"0\" className={classes.root} \r\n                                    onClick={()=> onClick('Admin')} >   \r\n                                    <CardHeader\r\n                                        component=\"div\"\r\n                                        title=\"Admin\" \r\n                                    />      \r\n                                </Card>\r\n                            </CardActionArea>                        \r\n                        </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}/>\r\n        </Grid> \r\n        </Paper>        \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{   \r\n    return { \r\n      //reducers       \r\n      expensesTypesList: state.expenseTypeReducer,\r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps, {\r\n    //actions\r\n    seleccionarCategoria,\r\n    loadExpensesTypesFromStorage,\r\n    loadExpensesListFromStorage\r\n  })(Dashboard); \r\n",["124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":46,"column":7,"nodeType":"136","endLine":46,"endColumn":9,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":1,"column":20,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"139","line":8,"column":24,"nodeType":"132","messageId":"133","endLine":8,"endColumn":51},{"ruleId":"130","severity":1,"message":"138","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"140","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"141","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":13},{"ruleId":"130","severity":1,"message":"139","line":10,"column":32,"nodeType":"132","messageId":"133","endLine":10,"endColumn":59},{"ruleId":"130","severity":1,"message":"142","line":27,"column":10,"nodeType":"132","messageId":"133","endLine":27,"endColumn":14},{"ruleId":"130","severity":1,"message":"143","line":27,"column":16,"nodeType":"132","messageId":"133","endLine":27,"endColumn":23},{"ruleId":"130","severity":1,"message":"144","line":2,"column":5,"nodeType":"132","messageId":"133","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"145","line":2,"column":16,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"126","replacedBy":"146"},{"ruleId":"128","replacedBy":"147"},{"ruleId":"130","severity":1,"message":"148","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":30},{"ruleId":"130","severity":1,"message":"149","line":64,"column":10,"nodeType":"132","messageId":"133","endLine":64,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":8,"column":1,"nodeType":"152","endLine":53,"endColumn":2},{"ruleId":"130","severity":1,"message":"153","line":18,"column":17,"nodeType":"132","messageId":"133","endLine":18,"endColumn":22},{"ruleId":"154","severity":1,"message":"155","line":45,"column":17,"nodeType":"132","messageId":"156","endLine":45,"endColumn":23},{"ruleId":"130","severity":1,"message":"157","line":5,"column":5,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"130","severity":1,"message":"138","line":1,"column":20,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"158","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":21,"column":7,"nodeType":"136","endLine":21,"endColumn":9,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"151","line":7,"column":1,"nodeType":"152","endLine":25,"endColumn":2},{"ruleId":"130","severity":1,"message":"160","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":30},{"ruleId":"130","severity":1,"message":"161","line":8,"column":32,"nodeType":"132","messageId":"133","endLine":8,"endColumn":44},{"ruleId":"130","severity":1,"message":"162","line":8,"column":46,"nodeType":"132","messageId":"133","endLine":8,"endColumn":69},{"ruleId":"134","severity":1,"message":"163","line":28,"column":5,"nodeType":"136","endLine":28,"endColumn":19,"suggestions":"164"},{"ruleId":"134","severity":1,"message":"135","line":54,"column":7,"nodeType":"136","endLine":54,"endColumn":9,"suggestions":"165"},{"ruleId":"126","replacedBy":"166"},{"ruleId":"128","replacedBy":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'indigo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["170"],"'useEffect' is defined but never used.","'loadExpensesListFromStorage' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.",["168"],["169"],"'PureComponent' is defined but never used.","'jsfiddleUrl' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'spend' is assigned a value but never used.","no-redeclare","'gastos' is already defined.","redeclared","'CARGAR_GASTOS' is defined but never used.","'Card' is defined but never used.",["171"],"'seleccionarCategoria' is defined but never used.","'cargarGastos' is defined but never used.","'loadExpensesFromStorage' is defined but never used.","React Hook useEffect has missing dependencies: 'props.selectedExpense.expenseBudget' and 'props.selectedExpense.expenseType'. Either include them or remove the dependency array.",["172"],["173"],["168"],["169"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"177","fix":"178"},{"desc":"174","fix":"179"},"Update the dependencies array to be: [props]",{"range":"180","text":"181"},{"range":"182","text":"181"},"Update the dependencies array to be: [props.gastos, props.selectedExpense.expenseBudget, props.selectedExpense.expenseType]",{"range":"183","text":"184"},{"range":"185","text":"181"},[1491,1493],"[props]",[728,730],[1085,1099],"[props.gastos, props.selectedExpense.expenseBudget, props.selectedExpense.expenseType]",[1680,1682]]